#+PROPERTY: header-args :session *my_session*
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle yes

* Visual configurations

These settings involve the visual appearance of items and text in Emacs.

** Powerline settings

 Set a nice custom ~powerline~ separator.
 Remember to set proper ~powerline-scale~ in ~dotspacemacs-default-font~.
 #+BEGIN_SRC emacs-lisp
   (setq powerline-default-separator 'arrow)
 #+END_SRC

** Folding

 Custom ~origami~ keybinding.
 #+BEGIN_SRC emacs-lisp
   (global-set-key (kbd "C-$") 'origami-recursively-toggle-node)
 #+END_SRC

 When window width is too small, wrap lines at word boundaries, not in any char.
 #+BEGIN_SRC emacs-lisp
   (global-visual-line-mode t)
 #+END_SRC

** Window management

 This setting ensure that new buffer are open splitting screen horizontally, not vertically.
 #+BEGIN_SRC emacs-lisp
   (setq split-height-threshold 50)
   (setq split-width-threshold 70)
 #+END_SRC

 Enable golden ratio, that makes buffer on focus bigger on the screen.
 #+BEGIN_SRC emacs-lisp
   (require 'golden-ratio)
   (golden-ratio-mode t)
 #+END_SRC

 Disable golden ration for certain buffers.
 #+BEGIN_SRC emacs-lisp
   (add-to-list 'golden-ratio-exclude-buffer-regexp
                "\\*gud-.*\\*"
                "\\*xref\\*")
 #+END_SRC

** Fira Code ligatures

 Enable ligatures and prettifications everywhere in Emacs.
 #+BEGIN_SRC emacs-lisp
   (global-prettify-symbols-mode t)
 #+END_SRC

 Following settings are taken from Fira Code [[https://github.com/tonsky/FiraCode/wiki/Emacs-instructions][wiki page].

 Fix certain glyphs appearance, both in standalone and daemon Emacs.
 #+BEGIN_SRC emacs-lisp
   (add-hook 'after-make-frame-functions
             (lambda (frame)
               (set-fontset-font t '(#Xe100 . #Xe16f) "Fira Code Symbol")))

   (set-fontset-font t '(#Xe100 . #Xe16f) "Fira Code Symbol")
 #+END_SRC

 Define chunks of text to prettify.
 Some have been removed with respect to the wiki page because they are too strong.
 #+BEGIN_SRC emacs-lisp
   (defconst fira-code-font-lock-keywords-alist
     (mapcar (lambda (regex-char-pair)
               `(,(car regex-char-pair)
                 (0 (prog1 ()
                      (compose-region (match-beginning 1)
                                      (match-end 1)
                                      ;; The first argument to concat is a string containing a literal tab
                                      ,(concat "	" (list (decode-char 'ucs (cadr regex-char-pair)))))))))
             '(
               ;;("\\(www\\)"                   #Xe100)
               ;; ("[^/]\\(\\*\\*\\)[^/]"        #Xe101)
               ;; ("\\(\\*\\*\\*\\)"             #Xe102)
               ;; ("\\(\\*\\*/\\)"               #Xe103)
               ;; ("\\(\\*>\\)"                  #Xe104)
               ;; ("[^*]\\(\\*/\\)"              #Xe105)
               ("\\(\\\\\\\\\\)"              #Xe106)
               ("\\(\\\\\\\\\\\\\\)"          #Xe107)
               ;; ("\\({-\\)"                    #Xe108)
               ;; ("\\(\\[\\]\\)"                #Xe109)
               ("\\(::\\)"                    #Xe10a)
               ;; ("\\(:::\\)"                   #Xe10b)
               ;; ("[^=]\\(:=\\)"                #Xe10c)
               ("\\(!!\\)"                    #Xe10d)
               ("\\(!=\\)"                    #Xe10e)
               ;; ("\\(!==\\)"                   #Xe10f)
               ;; ("\\(-}\\)"                    #Xe110)
               ("[^-]\\(--\\)[^-]"            #Xe111)
               ("[^-]\\(---\\)[^-]"           #Xe112)
               ("\\(-->\\)"                   #Xe113)
               ("[^-]\\(->\\)"                #Xe114)
               ;; ("\\(->>\\)"                   #Xe115)
               ;; ("\\(-<\\)"                    #Xe116)
               ;; ("\\(-<<\\)"                   #Xe117)
               ;; ("\\(-~\\)"                    #Xe118)
               ;; ("\\(#{\\)"                    #Xe119)
               ("\\(#\\[\\)"                  #Xe11a)
               ("\\(##\\)[^#\n]"              #Xe11b)
               ("\\(###\\)[^#\n]"             #Xe11c)
               ("\\(####\\)[^#\n]"            #Xe11d)
               ;; ("\\(#(\\)"                    #Xe11e)
               ;; ("\\(#\\?\\)"                  #Xe11f)
               ;; ("\\(#_\\)"                    #Xe120)
               ;; ("\\(#_(\\)"                   #Xe121)
               ;; ("\\(\\.-\\)"                  #Xe122)
               ;; ("\\(\\.=\\)"                  #Xe123)
               ;; ("\\(\\.\\.\\)"                #Xe124)
               ;; ("\\(\\.\\.<\\)"               #Xe125)
               ("\\(\\.\\.\\.\\)"             #Xe126)
               ;; ("\\(\\?=\\)"                  #Xe127)
               ;; ("\\(\\?\\?\\)"                #Xe128)
               ("\\(;;\\)"                    #Xe129)
               ("\\(/\\*\\)"                  #Xe12a)
               ("\\(/\\*\\*\\)"               #Xe12b)
               ;; ("\\(/=\\)"                    #Xe12c)
               ;; ("\\(/==\\)"                   #Xe12d)
               ;; ("\\(/>\\)"                    #Xe12e)
               ("\\(//\\)"                    #Xe12f)
               ("\\(///\\)"                   #Xe130)
               ("\\(&&\\)"                    #Xe131)
               ("\\(||\\)"                    #Xe132)
               ;; ("\\(||=\\)"                   #Xe133)
               ;; ("[^|]\\(|=\\)"                #Xe134)
               ;; ("\\(|>\\)"                    #Xe135)
               ;; ("\\(\\^=\\)"                  #Xe136)
               ;; ("\\(\\$>\\)"                  #Xe137)
               ("\\(\\+\\+\\)"                #Xe138)
               ;; ("\\(\\+\\+\\+\\)"             #Xe139)
               ;; ("\\(\\+>\\)"                  #Xe13a)
               ;; ("\\(=:=\\)"                   #Xe13b)
               ("[^!/]\\(==\\)[^>]"           #Xe13c)
               ;; ("\\(===\\)"                   #Xe13d)
               ("\\(==>\\)"                   #Xe13e)
               ("[^=]\\(=>\\)"                #Xe13f)
               ;; ("\\(=>>\\)"                   #Xe140)
               ("\\(<=\\)"                    #Xe141)
               ;; ("\\(=<<\\)"                   #Xe142)
               ;; ("\\(=/=\\)"                   #Xe143)
               ;; ("\\(>-\\)"                    #Xe144)
               ("\\(>=\\)"                    #Xe145)
               ;; ("\\(>=>\\)"                   #Xe146)
               ("[^-=]\\(>>\\)"               #Xe147)
               ;; ("\\(>>-\\)"                   #Xe148)
               ;; ("\\(>>=\\)"                   #Xe149)
               ("\\(>>>\\)"                   #Xe14a)
               ("\\(<\\*\\)"                  #Xe14b)
               ("\\(<\\*>\\)"                 #Xe14c)
               ;; ("\\(<|\\)"                    #Xe14d)
               ;; ("\\(<|>\\)"                   #Xe14e)
               ("\\(<\\$\\)"                  #Xe14f)
               ("\\(<\\$>\\)"                 #Xe150)
               ;; ("\\(<!--\\)"                  #Xe151)
               ("\\(<-\\)"                    #Xe152)
               ("\\(<--\\)"                   #Xe153)
               ("\\(<->\\)"                   #Xe154)
               ;; ("\\(<\\+\\)"                  #Xe155)
               ;; ("\\(<\\+>\\)"                 #Xe156)
               ("\\(<=\\)"                    #Xe157)
               ("\\(<==\\)"                   #Xe158)
               ("\\(<=>\\)"                   #Xe159)
               ;; ("\\(<=<\\)"                   #Xe15a)
               ;; ("\\(<>\\)"                    #Xe15b)
               ("[^-=]\\(<<\\)"               #Xe15c)
               ;; ("\\(<<-\\)"                   #Xe15d)
               ;; ("\\(<<=\\)"                   #Xe15e)
               ("\\(<<<\\)"                   #Xe15f)
               ;; ("\\(<~\\)"                    #Xe160)
               ;; ("\\(<~~\\)"                   #Xe161)
               ("\\(</\\)"                    #Xe162)
               ("\\(</>\\)"                   #Xe163)
               ;; ("\\(~@\\)"                    #Xe164)
               ;; ("\\(~-\\)"                    #Xe165)
               ("\\(~=\\)"                    #Xe166)
               ;; ("\\(~>\\)"                    #Xe167)
               ;; ("[^<]\\(~~\\)"                #Xe168)
               ;; ("\\(~~>\\)"                   #Xe169)
               ("\\(%%\\)"                    #Xe16a)
               ;; ("\\(x\\)"                    #Xe16b)
               ;; ("[^:=]\\(:\\)[^:=]"           #Xe16c)
               ("[^\\+<>]\\(\\+\\)[^\\+<>]"   #Xe16d)
               ;; ("[^\\*/<>]\\(\\*\\)[^\\*/<>]" #Xe16f)
               )))

   (add-hook 'prog-mode-hook (lambda () (font-lock-add-keywords
                                    nil
                                    fira-code-font-lock-keywords-alist)))
 #+END_SRC

# Local Variables:
# eval: (add-hook 'after-save-hook 'org-babel-tangle-and-byte-compile-this-file t t)
# End:
